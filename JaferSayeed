## This assignment is aimed to write the following functions:
## 1. makeCacheMatrix: This function creates a special "matrix" object that can cache its inverse.
## 2. cacheSolve: This function computes the inverse of the special "matrix" returned by makeCacheMatrix above. 
## If the inverse has already been calculated (and the matrix has not changed), then ## the cachesolve should retrieve the inverse from the cache.

## Function to cache the inverse 

makeCacheMatrix <- function(mat = matrix()) {
inv <- NULL
set <- function(y) {
mat <<- y
inv <<- NULL
}
get <- function() mat
setinv <- function(inverse) inv <<- inverse
getinv <- function() inv
list(set = set, get = get, setinv = setinv, getinv = getinv)
}



## Return a matrix that is the inverse of 'mat'

cacheSolve <- function(mat, ...) {
inv <- mat$getinv()
if(!is.null(inv)) {
message("getting cached result")
return(inv)
}
data <- mat$get()
inv <- solve(data, ...)
mat$setinv(inv)
inv
}
